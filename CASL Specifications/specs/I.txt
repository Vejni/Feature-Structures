spec I_0 =
	sorts Point, Line
	%( here the sorts needed are a Point and a Line )%

ops
	
	c_1, c_2, c_5, c_8: Point
	r_21, r_52, r_85: Line

preds
	%( the "intersect" predicate is defined on pairs of Points, pairs of Lines, or a Point and a Line )%
	intersectPP: Point * Point

	%( these predicates are defined on pairs of Lines, pairs of Points, 
	or a Line and a Point, and they express relative position )%

	__backPP__,__frontPP__,__leftBackPP__,__leftFrontPP__,
	__rightBackPP__,__rightFrontPP__  : Point * Point

	intersectLP: Line * Point


%axioms%

	%( describe the precise relative positions of all pairs of instantiated Points )%
	.c_1 rightBackPP c_2 .c_2 leftFrontPP c_1 
	.c_1 rightBackPP c_5 .c_5 leftFrontPP c_1
	.c_5 leftBackPP c_8 .c_8 rightFrontPP c_5 

	.c_1 backPP c_8 .c_8 frontPP c_1
	.c_2 backPP c_5 .c_5 frontPP c_2

	.intersectLP(r_21,c_2) .intersectLP(r_21,c_1)
	.intersectLP(r_52,c_5) .intersectLP(r_52,c_2)
	.intersectLP(r_85,c_8) .intersectLP(r_85,c_5)


end